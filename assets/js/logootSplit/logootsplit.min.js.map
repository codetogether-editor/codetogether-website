{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///logootsplit.min.js","webpack:///webpack/bootstrap b59d3f421048fe11576f","webpack:///./src/index.js","webpack:///./src/Main/Const.js","webpack:///./src/Main/RemoteCommand.js","webpack:///./src/Main/LogootDoc/Base.js","webpack:///./src/Main/LogootDoc/CharId.js","webpack:///./src/Main/LogootDoc/Char.js","webpack:///./src/Main/LogootDoc/Document.js","webpack:///./src/Main/Algorithm.js","webpack:///./src/Main/DocumentChanger.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_Const","_RemoteCommand","_RemoteCommand2","_Base","_Base2","_CharId","_CharId2","_Char","_Char2","_Document","_Document2","_Algorithm","_Algorithm2","_DocumentChanger","_DocumentChanger2","window","Base","RemoteCommand","CharId","Char","Document","Algorithm","DocumentChanger","MIN_BASE_EL","MAX_BASE_EL","MIN_OFFSET","MAX_OFFSET","FIRST_ASSIGNED_OFFSET","Math","floor","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","str","sessionId","type","ids","main","clock","minUsedOffset","maxUsedOffset","otherBase","charId","thisId","fullBase","otherId","fullId","get","concat","slice","base","offset","otherChar","isEqual","otherCharId","min","copy","DOC_BEG","DOC_END","chars","bases","pos","charWeAppendTo","firstOffset","insertStringWithExistingBase","charWePrependTo","arguments","undefined","insertStrAtPos","sortDocumentPart","addBase","firstCharOffset","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","char","newId","newChar","insertCharAtPos","err","changes","pos0","getPosOfFirstCharWithBiggerId","prevUsedPos","changeStr","getPosOfFirstCharWithBiggerIdStartingFrom","change","string","position","getCoordPos","push","line","column","sortBeg","sortEnd","temp","prevPos","isBigger","fromPos","toPos","delChar","splice","startPos","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","b","lines","text","doc","idsOfCharsToDeleteLater","insertIntoDocument","createRemoteAddCommand","strId","createCharsFromStr","j","addCharsAndGetChanges","delIds","getCharIds","delIdsCopy","map","delChars","createRemoteDelCommand","delPos","getPosOfCharWithIdStartingFrom","delPosRange","start","end","extendRange","from","to","range","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getPosOfCharWithId","remoteDelCommand","makeDelCommand","session","getSameBase","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","canInsertAppended","insertStrAppended","canInsertPrepended","insertStrPrepended","insertStringWithNewBase","generateBaseAtPos","getCharAtPos","isSameSession","isHighestOffsetInBase","isSpaceInBaseAfter","isNotGoingToOverlapAfterApp","prevCharId","getIdOfCharAtPos","nextCharId","lastIdOfAppStr","isLowestOffsetInBase","isSpaceInBaseBefore","isNotGoingToOverlapAfterPrep","firstIdOfPrepStr","spaceLength","addId","remoteAddCommand","makeAddCommand","idLow","idHigh","low","high","getRandomElementBetween","idInsert","idNext","strLength","isPrefix","random","algorithm","editor","getAsLines","convertToAbsolutePos","addCmd","insert","startLine","startColumn","endLine","endColumn","delCmd","remove","add","del","console","log","realDoc","getSession","getDocument","getLine"],"mappings":"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","file":"logootsplit.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"logootsplit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"logootsplit\"] = factory();\n\telse\n\t\troot[\"logootsplit\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"logootsplit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"logootsplit\"] = factory();\n\telse\n\t\troot[\"logootsplit\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _Const = __webpack_require__(1);\n\t\n\tvar _Const2 = _interopRequireDefault(_Const);\n\t\n\tvar _RemoteCommand = __webpack_require__(2);\n\t\n\tvar _RemoteCommand2 = _interopRequireDefault(_RemoteCommand);\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tvar _Document = __webpack_require__(6);\n\t\n\tvar _Document2 = _interopRequireDefault(_Document);\n\t\n\tvar _Algorithm = __webpack_require__(7);\n\t\n\tvar _Algorithm2 = _interopRequireDefault(_Algorithm);\n\t\n\tvar _DocumentChanger = __webpack_require__(8);\n\t\n\tvar _DocumentChanger2 = _interopRequireDefault(_DocumentChanger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.Base = _Base2.default;\n\twindow.RemoteCommand = _RemoteCommand2.default;\n\twindow.CharId = _CharId2.default;\n\twindow.Char = _Char2.default;\n\twindow.Document = _Document2.default;\n\twindow.Algorithm = _Algorithm2.default;\n\twindow.DocumentChanger = _DocumentChanger2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\twindow.MIN_BASE_EL = 0;\n\t//const MAX_BASE_EL = Math.pow(2, 53) - 1\n\twindow.MAX_BASE_EL = 1000;\n\twindow.MIN_OFFSET = MIN_BASE_EL + 1;\n\twindow.MAX_OFFSET = MAX_BASE_EL;\n\twindow.FIRST_ASSIGNED_OFFSET = Math.floor(MAX_OFFSET / 2);\n\t\n\t// Char ID is represented by array of numbers, each of them in range [MIN_BASE_EL;MAX_BASE_EL]\n\t// Last element of char ID is called offset, others are called base\n\t// MIN_BASE_EL cannot be used as offset\n\t// When new base is generated, first char assigned to this base get offset FIRST_ASSIGNED_OFFSET, this value decide how much chars we can append and prepend to first char\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RemoteCommand = function () {\n\t    function RemoteCommand() {\n\t        _classCallCheck(this, RemoteCommand);\n\t    }\n\t\n\t    _createClass(RemoteCommand, [{\n\t        key: \"makeAddCommand\",\n\t        value: function makeAddCommand(str, id, sessionId) {\n\t            this.type = \"add\";\n\t            this.str = str;\n\t            this.id = id;\n\t            this.sessionId = sessionId;\n\t        }\n\t    }, {\n\t        key: \"makeDelCommand\",\n\t        value: function makeDelCommand(ids, sessionId) {\n\t            this.type = \"del\";\n\t            this.ids = ids;\n\t            this.sessionId = sessionId;\n\t        }\n\t    }]);\n\t\n\t    return RemoteCommand;\n\t}();\n\t\n\texports.default = RemoteCommand;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Base = function () {\n\t    function Base(main, sessionId, clock) {\n\t        _classCallCheck(this, Base);\n\t\n\t        this.main = main;\n\t        this.sessionId = sessionId;\n\t        this.clock = clock;\n\t        this.minUsedOffset = MAX_OFFSET + 1;\n\t        this.maxUsedOffset = MIN_OFFSET - 1;\n\t    }\n\t\n\t    _createClass(Base, [{\n\t        key: \"isEqual\",\n\t        value: function isEqual(otherBase) {\n\t            if (this.sessionId !== otherBase.sessionId || this.clock !== otherBase.clock || this.main.length !== otherBase.main.length) return false;\n\t            for (var i = 0; i < this.main.length; ++i) {\n\t                if (this.main[i] != otherBase.main[i]) return false;\n\t            }return true;\n\t        }\n\t    }, {\n\t        key: \"isPrefix\",\n\t        value: function isPrefix(charId) {\n\t            var thisId = this.fullBase;\n\t            var otherId = charId.fullId;\n\t            if (thisId.length > otherId.length) return false;\n\t            for (var i = 0; i < thisId.length; ++i) {\n\t                if (thisId[i] != otherId[i]) return false;\n\t            }return true;\n\t        }\n\t    }, {\n\t        key: \"fullBase\",\n\t        get: function get() {\n\t            return this.main.concat([this.sessionId], [this.clock]);\n\t        }\n\t    }, {\n\t        key: \"copy\",\n\t        get: function get() {\n\t            return new Base(this.main.slice(), this.sessionId, this.clock);\n\t        }\n\t    }]);\n\t\n\t    return Base;\n\t}();\n\t\n\texports.default = Base;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CharId = function () {\n\t    function CharId(base, offset) {\n\t        _classCallCheck(this, CharId);\n\t\n\t        this.base = base;\n\t        this.offset = offset;\n\t        if (this.offset > base.maxUsedOffset) base.maxUsedOffset = this.offset;\n\t        if (this.offset < base.minUsedOffset) base.minUsedOffset = offset;\n\t    }\n\t\n\t    _createClass(CharId, [{\n\t        key: \"isEqual\",\n\t        value: function isEqual(otherChar) {\n\t            return this.base.isEqual(otherChar.base) && this.offset === otherChar.offset;\n\t        }\n\t    }, {\n\t        key: \"isBigger\",\n\t        value: function isBigger(otherCharId) {\n\t            var thisId = this.fullId,\n\t                otherId = otherCharId.fullId;\n\t            for (var i = 0; i < Math.min(thisId.length, otherId.length); ++i) {\n\t                if (thisId[i] !== otherId[i]) return thisId[i] > otherId[i];\n\t            }return thisId.length > otherId.length;\n\t        }\n\t    }, {\n\t        key: \"fullId\",\n\t        get: function get() {\n\t            return this.base.fullBase.concat(this.offset);\n\t        }\n\t    }, {\n\t        key: \"copy\",\n\t        get: function get() {\n\t            return new CharId(this.base.copy, this.offset);\n\t        }\n\t    }]);\n\t\n\t    return CharId;\n\t}();\n\t\n\texports.default = CharId;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Char = function () {\n\t    function Char(value, id) {\n\t        _classCallCheck(this, Char);\n\t\n\t        this.value = value;\n\t        this.id = id;\n\t    }\n\t\n\t    _createClass(Char, [{\n\t        key: \"isEqual\",\n\t        value: function isEqual(otherChar) {\n\t            return this.value === otherChar.value && this.id.isEqual(otherChar.id);\n\t        }\n\t    }]);\n\t\n\t    return Char;\n\t}();\n\t\n\texports.default = Char;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// At the beginning document contains two chars: DOC_BEG and DOC_END, they're not actual\n\t// text chars and are only used to represent start and end of the document\n\t\n\tvar DOC_BEG = new _Char2.default(null, new _CharId2.default(new _Base2.default([MIN_BASE_EL - 1], MIN_BASE_EL - 1, MIN_BASE_EL - 1), MIN_OFFSET - 1));\n\tvar DOC_END = new _Char2.default(null, new _CharId2.default(new _Base2.default([MAX_BASE_EL + 1], MAX_BASE_EL + 1, MAX_BASE_EL + 1), MAX_OFFSET + 1));\n\t\n\tvar Document = function () {\n\t    function Document() {\n\t        _classCallCheck(this, Document);\n\t\n\t        this.chars = [DOC_BEG, DOC_END];\n\t        this.bases = [];\n\t    }\n\t\n\t    _createClass(Document, [{\n\t        key: 'insertStrAppended',\n\t        value: function insertStrAppended(str, pos) {\n\t            var charWeAppendTo = this.chars[pos - 1];\n\t            var base = charWeAppendTo.id.base;\n\t            var firstOffset = charWeAppendTo.id.offset + 1;\n\t            this.insertStringWithExistingBase(str, pos, base, firstOffset);\n\t        }\n\t    }, {\n\t        key: 'insertStrPrepended',\n\t        value: function insertStrPrepended(str, pos) {\n\t            var charWePrependTo = this.chars[pos];\n\t            var base = charWePrependTo.id.base;\n\t            var firstOffset = charWePrependTo.id.offset - str.length;\n\t            this.insertStringWithExistingBase(str, pos, base, firstOffset);\n\t        }\n\t    }, {\n\t        key: 'insertStringWithExistingBase',\n\t        value: function insertStringWithExistingBase(str, pos, base) {\n\t            var firstOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : FIRST_ASSIGNED_OFFSET;\n\t            //optimize\n\t            this.insertStrAtPos(str, pos, base, firstOffset);\n\t            //this.sortDocumentPart(1, this.chars.length - 1) //VERIFY CHANGE\n\t            this.sortDocumentPart(pos, this.chars.length - 1);\n\t        }\n\t    }, {\n\t        key: 'insertStringWithNewBase',\n\t        value: function insertStringWithNewBase(str, pos, base) {\n\t            this.addBase(base);\n\t            this.insertStringWithExistingBase(str, pos, base);\n\t        }\n\t    }, {\n\t        key: 'insertStrAtPos',\n\t        value: function insertStrAtPos(str, pos, base, firstCharOffset) {\n\t            var offset = firstCharOffset;\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = str[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var char = _step.value;\n\t\n\t                    var newId = new _CharId2.default(base, offset);\n\t                    var newChar = new _Char2.default(char, newId);\n\t                    this.insertCharAtPos(newChar, pos);\n\t                    ++pos;\n\t                    ++offset;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addCharsAndGetChanges',\n\t        value: function addCharsAndGetChanges(chars) {\n\t            var changes = [];\n\t            if (chars.length == 0) return changes;\n\t            var pos0 = this.getPosOfFirstCharWithBiggerId(chars[0].id);\n\t            var prevUsedPos = null;\n\t            var changeStr = \"\";\n\t\n\t            for (var i = chars.length - 1; i >= 0; --i) {\n\t                var pos = this.getPosOfFirstCharWithBiggerIdStartingFrom(chars[i].id, pos0);\n\t                if (prevUsedPos === pos || changeStr === \"\") {\n\t                    changeStr = chars[i].value + changeStr;\n\t                } else {\n\t                    var change = { type: \"add\", string: changeStr, position: this.getCoordPos(prevUsedPos) };\n\t                    changes.push(change);\n\t                    changeStr = chars[i].value;\n\t                }\n\t                if (i == 0 && changeStr !== \"\") changes.push({ type: \"add\", string: changeStr, position: this.getCoordPos(pos) });\n\t                this.insertCharAtPos(chars[i], pos);\n\t                prevUsedPos = pos;\n\t            }\n\t\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'getCoordPos',\n\t        value: function getCoordPos(pos) {\n\t            var line = 0;\n\t            var column = 0;\n\t            for (var i = pos - 1; this.chars[i].value != '\\n' && i > 0; --i) {\n\t                column++;\n\t            }\n\t            for (var _i = 1; _i < pos; ++_i) {\n\t                if (this.chars[_i].value == \"\\n\") line++;\n\t            }return { line: line, column: column };\n\t        }\n\t    }, {\n\t        key: 'sortDocumentPart',\n\t        value: function sortDocumentPart(sortBeg, sortEnd) {\n\t            for (var pos = sortBeg + 1; pos <= sortEnd; ++pos) {\n\t                var temp = this.chars[pos];\n\t                var prevPos = pos - 1;\n\t                for (; prevPos >= 1 && this.chars[prevPos].id.isBigger(temp.id); --prevPos) {\n\t                    this.chars[prevPos + 1] = this.chars[prevPos];\n\t                }this.chars[prevPos + 1] = temp;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addBase',\n\t        value: function addBase(base) {\n\t            this.bases.push(base);\n\t        }\n\t    }, {\n\t        key: 'delChars',\n\t        value: function delChars(fromPos, toPos) {\n\t            for (var pos = toPos; pos >= fromPos; --pos) {\n\t                this.delChar(pos);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'delChar',\n\t        value: function delChar(pos) {\n\t            this.chars.splice(pos, 1);\n\t        }\n\t    }, {\n\t        key: 'getPosOfCharWithId',\n\t        value: function getPosOfCharWithId(id) {\n\t            for (var pos = 0; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isEqual(id)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getPosOfCharWithIdStartingFrom',\n\t        value: function getPosOfCharWithIdStartingFrom(id, startPos) {\n\t            for (var pos = startPos; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isEqual(id)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getPosOfFirstCharWithBiggerId',\n\t        value: function getPosOfFirstCharWithBiggerId(charId) {\n\t            for (var pos = 1; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isBigger(charId)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getPosOfFirstCharWithBiggerIdStartingFrom',\n\t        value: function getPosOfFirstCharWithBiggerIdStartingFrom(charId, startPos) {\n\t            for (var pos = startPos; pos < this.chars.length; ++pos) {\n\t                if (this.chars[pos].id.isBigger(charId)) return pos;\n\t            }return null;\n\t        }\n\t    }, {\n\t        key: 'getCharAtPos',\n\t        value: function getCharAtPos(pos) {\n\t            return this.chars[pos];\n\t        }\n\t    }, {\n\t        key: 'getIdOfCharAtPos',\n\t        value: function getIdOfCharAtPos(pos) {\n\t            return this.chars[pos].id;\n\t        }\n\t    }, {\n\t        key: 'getCharIds',\n\t        value: function getCharIds(fromPos, toPos) {\n\t            var ids = [];\n\t            for (var i = fromPos; i <= toPos; ++i) {\n\t                ids.push(this.chars[i].id);\n\t            }return ids;\n\t        }\n\t    }, {\n\t        key: 'getSameBase',\n\t        value: function getSameBase(base) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.bases[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var b = _step2.value;\n\t\n\t                    if (base.isEqual(b)) return b;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'insertCharAtPos',\n\t        value: function insertCharAtPos(char, pos) {\n\t            this.chars.splice(pos, 0, char);\n\t        }\n\t    }, {\n\t        key: 'isEmpty',\n\t        value: function isEmpty() {\n\t            return this.chars.length == 2;\n\t        }\n\t    }, {\n\t        key: 'getAsLines',\n\t        value: function getAsLines() {\n\t            var lines = [];\n\t            var line = [];\n\t            for (var i = 1; i < this.chars.length - 1; ++i) {\n\t                line.push(this.chars[i]);\n\t                if (this.chars[i].value == '\\n' || i == this.chars.length - 2) lines.push(line);\n\t            }\n\t            return lines;\n\t        }\n\t    }, {\n\t        key: 'text',\n\t        get: function get() {\n\t            var text = \"\";\n\t            for (var i = 0; i < this.chars.length; ++i) {\n\t                text += this.chars[i].value;\n\t            }return text;\n\t        }\n\t    }, {\n\t        key: 'textTest',\n\t        get: function get() {\n\t            var text = \"\";\n\t            for (var i = 0; i < this.chars.length; ++i) {\n\t                text += i == 0 || i == this.chars.length - 1 ? \"\" : this.chars[i].value;\n\t                if (i + 1 < this.chars.length && !this.chars[i].id.base.isEqual(this.chars[i + 1].id.base)) text += \"|\";\n\t            }\n\t            return text;\n\t        }\n\t    }]);\n\t\n\t    return Document;\n\t}();\n\t\n\texports.default = Document;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tvar _Document = __webpack_require__(6);\n\t\n\tvar _Document2 = _interopRequireDefault(_Document);\n\t\n\tvar _RemoteCommand = __webpack_require__(2);\n\t\n\tvar _RemoteCommand2 = _interopRequireDefault(_RemoteCommand);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Algorithm = function () {\n\t    function Algorithm(doc, sessionId) {\n\t        _classCallCheck(this, Algorithm);\n\t\n\t        this.doc = doc;\n\t        this.sessionId = sessionId;\n\t        this.clock = 0;\n\t        this.idsOfCharsToDeleteLater = [];\n\t    }\n\t\n\t    _createClass(Algorithm, [{\n\t        key: 'insert',\n\t        value: function insert(str, pos) {\n\t            this.insertIntoDocument(str, pos);\n\t            return this.createRemoteAddCommand(str, pos);\n\t        }\n\t    }, {\n\t        key: 'add',\n\t        value: function add(str, strId) {\n\t            var chars = this.createCharsFromStr(str, strId);\n\t            for (var i = chars.length - 1; i >= 0; --i) {\n\t                for (var j = this.idsOfCharsToDeleteLater.length - 1; j >= 0; --j) {\n\t                    if (chars[i].id.isEqual(this.idsOfCharsToDeleteLater[j])) {\n\t                        chars.splice(i, 1);\n\t                        this.idsOfCharsToDeleteLater.splice(j, 1);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            var changes = this.doc.addCharsAndGetChanges(chars);\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'remove',\n\t        value: function remove(fromPos, toPos) {\n\t            var delIds = this.doc.getCharIds(fromPos, toPos);\n\t            var delIdsCopy = delIds.map(function (id) {\n\t                return id.copy;\n\t            });\n\t            this.doc.delChars(fromPos, toPos);\n\t            return this.createRemoteDelCommand(delIdsCopy);\n\t        }\n\t    }, {\n\t        key: 'del',\n\t        value: function del(ids) {\n\t            var pos0 = 1;\n\t            var delPos = [];\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = ids[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var id = _step.value;\n\t\n\t                    var _pos = this.doc.getPosOfCharWithIdStartingFrom(id, pos0);\n\t                    if (_pos != null) {\n\t                        delPos.push(_pos);\n\t                        pos0 = _pos;\n\t                    } else this.idsOfCharsToDeleteLater.push(id);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var changes = [];\n\t            var prevUsedPos = null;\n\t            var delPosRange = { start: null, end: null };\n\t            for (var i = delPos.length - 1; i >= 0; --i) {\n\t                var pos = delPos[i];\n\t                if (prevUsedPos === pos + 1 || delPosRange.start == null) delPosRange = this.extendRange(delPosRange, pos);else {\n\t                    var change = { type: \"del\", from: this.doc.getCoordPos(delPosRange.start), to: this.doc.getCoordPos(delPosRange.end) };\n\t                    changes.push(change);\n\t                    delPosRange = { start: pos, end: pos };\n\t                }\n\t                if (i == 0 && delPosRange.start != null) {\n\t                    var _change = { type: \"del\", from: this.doc.getCoordPos(delPosRange.start), to: this.doc.getCoordPos(delPosRange.end) };\n\t                    changes.push(_change);\n\t                }\n\t                prevUsedPos = pos;\n\t            }\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = delPos[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var _pos2 = _step2.value;\n\t\n\t                    this.doc.delChar(_pos2);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'extendRange',\n\t        value: function extendRange(range, pos) {\n\t            return range.start == null ? { start: pos, end: pos } : { start: pos, end: range.end };\n\t        }\n\t    }, {\n\t        key: 'Olddel',\n\t        value: function Olddel(ids) {\n\t            //optimize eg. if consecutive ids then obtain range (pos, pos+length-1)\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = ids[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var id = _step3.value;\n\t\n\t                    var pos = this.doc.getPosOfCharWithId(id);\n\t                    if (pos != null) this.doc.delChar(pos);else this.idsOfCharsToDeleteLater.push(id);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'createRemoteDelCommand',\n\t        value: function createRemoteDelCommand(delIds) {\n\t            var remoteDelCommand = new _RemoteCommand2.default();\n\t            remoteDelCommand.makeDelCommand(delIds, this.session);\n\t            return remoteDelCommand;\n\t        }\n\t    }, {\n\t        key: 'createCharsFromStr',\n\t        value: function createCharsFromStr(str, strId) {\n\t            var base = this.doc.getSameBase(strId.base);\n\t            if (base == null) base = strId.base;\n\t\n\t            var chars = [];\n\t            var offset = strId.offset;\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = str[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var char = _step4.value;\n\t\n\t                    chars.push(new _Char2.default(char, new _CharId2.default(base, offset)));\n\t                    ++offset;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return chars;\n\t        }\n\t    }, {\n\t        key: 'insertIntoDocument',\n\t        value: function insertIntoDocument(str, pos) {\n\t            if (this.canInsertAppended(str, pos)) this.doc.insertStrAppended(str, pos);else if (this.canInsertPrepended(str, pos)) this.doc.insertStrPrepended(str, pos);else this.doc.insertStringWithNewBase(str, pos, this.generateBaseAtPos(pos));\n\t        }\n\t    }, {\n\t        key: 'canInsertAppended',\n\t        value: function canInsertAppended(str, pos) {\n\t            var charWeAppendTo = this.doc.getCharAtPos(pos - 1);\n\t            return this.isSameSession(charWeAppendTo) && this.isHighestOffsetInBase(charWeAppendTo) && this.isSpaceInBaseAfter(charWeAppendTo, str.length) && this.isNotGoingToOverlapAfterApp(str, pos);\n\t        }\n\t    }, {\n\t        key: 'isNotGoingToOverlapAfterApp',\n\t        value: function isNotGoingToOverlapAfterApp(str, pos) {\n\t            var prevCharId = this.doc.getIdOfCharAtPos(pos - 1);\n\t            var nextCharId = this.doc.getIdOfCharAtPos(pos);\n\t            var lastIdOfAppStr = prevCharId.copy;\n\t            lastIdOfAppStr.offset += str.length;\n\t            return !lastIdOfAppStr.isBigger(nextCharId);\n\t        }\n\t    }, {\n\t        key: 'canInsertPrepended',\n\t        value: function canInsertPrepended(str, pos) {\n\t            var charWePrependTo = this.doc.getCharAtPos(pos);\n\t            return this.isSameSession(charWePrependTo) && this.isLowestOffsetInBase(charWePrependTo) && this.isSpaceInBaseBefore(charWePrependTo, str.length) && this.isNotGoingToOverlapAfterPrep(str, pos);\n\t        }\n\t    }, {\n\t        key: 'isNotGoingToOverlapAfterPrep',\n\t        value: function isNotGoingToOverlapAfterPrep(str, pos) {\n\t            var prevCharId = this.doc.getIdOfCharAtPos(pos - 1);\n\t            var nextCharId = this.doc.getIdOfCharAtPos(pos);\n\t            var firstIdOfPrepStr = nextCharId.copy;\n\t            firstIdOfPrepStr.offset -= str.length;\n\t            return !prevCharId.isBigger(firstIdOfPrepStr);\n\t        }\n\t    }, {\n\t        key: 'isSameSession',\n\t        value: function isSameSession(char) {\n\t            return char.id.base.sessionId == this.sessionId;\n\t        }\n\t    }, {\n\t        key: 'isHighestOffsetInBase',\n\t        value: function isHighestOffsetInBase(char) {\n\t            return char.id.offset == char.id.base.maxUsedOffset;\n\t        }\n\t    }, {\n\t        key: 'isLowestOffsetInBase',\n\t        value: function isLowestOffsetInBase(char) {\n\t            return char.id.offset == char.id.base.minUsedOffset;\n\t        }\n\t    }, {\n\t        key: 'isSpaceInBaseAfter',\n\t        value: function isSpaceInBaseAfter(char, spaceLength) {\n\t            return char.id.offset + spaceLength < MAX_BASE_EL;\n\t        }\n\t    }, {\n\t        key: 'isSpaceInBaseBefore',\n\t        value: function isSpaceInBaseBefore(char, spaceLength) {\n\t            return char.id.offset - spaceLength > MIN_BASE_EL;\n\t        }\n\t    }, {\n\t        key: 'createRemoteAddCommand',\n\t        value: function createRemoteAddCommand(str, pos) {\n\t            var addId = this.doc.getCharAtPos(pos).id.copy;\n\t            var remoteAddCommand = new _RemoteCommand2.default();\n\t            remoteAddCommand.makeAddCommand(str, addId, this.sessionId);\n\t            return remoteAddCommand;\n\t        }\n\t    }, {\n\t        key: 'generateBaseAtPos',\n\t        value: function generateBaseAtPos(pos) {\n\t            var idLow = this.doc.getIdOfCharAtPos(pos - 1).fullId;\n\t            var idHigh = this.doc.getIdOfCharAtPos(pos).fullId;\n\t            var low = idLow[0];\n\t            var high = idHigh[0];\n\t            var base = new _Base2.default([], this.sessionId, ++this.clock);\n\t\n\t            for (var i = 1; high - low < 2; ++i) {\n\t                base.main.push(low);\n\t                low = i < idLow.length ? idLow[i] : MIN_BASE_EL;\n\t                high = i < idHigh.length ? idHigh[i] : MAX_BASE_EL;\n\t            }\n\t            base.main.push(this.getRandomElementBetween(low + 1, high - 1));\n\t            return base;\n\t        }\n\t    }, {\n\t        key: 'numberOfInsertableCharaters',\n\t        value: function numberOfInsertableCharaters(idInsert, idNext, strLength) {\n\t            if (idInsert.base.isPrefix(idNext)) return 0;else return strLength;\n\t        }\n\t    }, {\n\t        key: 'getRandomElementBetween',\n\t        value: function getRandomElementBetween(low, high) {\n\t            return Math.floor(Math.random() * (high - low + 1)) + low;\n\t        }\n\t    }]);\n\t\n\t    return Algorithm;\n\t}();\n\t\n\texports.default = Algorithm;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Base = __webpack_require__(3);\n\t\n\tvar _Base2 = _interopRequireDefault(_Base);\n\t\n\tvar _CharId = __webpack_require__(4);\n\t\n\tvar _CharId2 = _interopRequireDefault(_CharId);\n\t\n\tvar _Char = __webpack_require__(5);\n\t\n\tvar _Char2 = _interopRequireDefault(_Char);\n\t\n\tvar _Document = __webpack_require__(6);\n\t\n\tvar _Document2 = _interopRequireDefault(_Document);\n\t\n\tvar _RemoteCommand = __webpack_require__(2);\n\t\n\tvar _RemoteCommand2 = _interopRequireDefault(_RemoteCommand);\n\t\n\tvar _Algorithm = __webpack_require__(7);\n\t\n\tvar _Algorithm2 = _interopRequireDefault(_Algorithm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DocumentChanger = function () {\n\t    function DocumentChanger(algorithm, editor) {\n\t        _classCallCheck(this, DocumentChanger);\n\t\n\t        this.algorithm = algorithm;\n\t        this.editor = editor;\n\t        this.doc = algorithm.doc;\n\t        this.sessionId = algorithm.sessionId;\n\t        this.lines = this.doc.getAsLines();\n\t    }\n\t\n\t    _createClass(DocumentChanger, [{\n\t        key: 'performInsertAndGetAddCmd',\n\t        value: function performInsertAndGetAddCmd(str, line, column) {\n\t            var pos = this.convertToAbsolutePos(line, column);\n\t            var addCmd = this.algorithm.insert(str, pos);\n\t            return addCmd;\n\t        }\n\t    }, {\n\t        key: 'performRemoveAndGetDelCmd',\n\t        value: function performRemoveAndGetDelCmd(startLine, startColumn, endLine, endColumn) {\n\t            var fromPos = this.convertToAbsolutePos(startLine, startColumn);\n\t            var toPos = this.convertToAbsolutePos(endLine, endColumn);\n\t            var delCmd = this.algorithm.remove(fromPos, toPos);\n\t            return delCmd;\n\t        }\n\t    }, {\n\t        key: 'addAndGetChanges',\n\t        value: function addAndGetChanges(str, strId) {\n\t            var changes = this.algorithm.add(str, strId);\n\t            //for(let c of changes)\n\t            //    console.log(c.type, c.string, c.position.line, c.position.column)\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'delAndGetChanges',\n\t        value: function delAndGetChanges(ids) {\n\t            var changes = this.algorithm.del(ids);\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var c = _step.value;\n\t\n\t                    console.log(c.type, c.from.line, c.from.column, c.to.line, c.to.column);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return changes;\n\t        }\n\t    }, {\n\t        key: 'convertToAbsolutePos',\n\t        value: function convertToAbsolutePos(line, column) {\n\t            var pos = 0;\n\t            var realDoc = this.editor.getSession().getDocument();\n\t\n\t            if (line > 0) for (var i = 0; i < line; ++i) {\n\t                pos += realDoc.getLine(i).length;\n\t            }return pos + line + column + 1;\n\t        }\n\t    }]);\n\t\n\t    return DocumentChanger;\n\t}();\n\t\n\texports.default = DocumentChanger;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** logootsplit.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b59d3f421048fe11576f\n **/","import Const from \"./Main/Const.js\";\r\n\r\nimport RemoteCommand from \"./Main/RemoteCommand.js\";\r\nimport Base from \"./Main/LogootDoc/Base.js\";\r\nimport CharId from \"./Main/LogootDoc/CharId.js\";\r\nimport Char from \"./Main/LogootDoc/Char.js\";\r\nimport Document from \"./Main/LogootDoc/Document.js\";\r\nimport Algorithm from \"./Main/Algorithm.js\";\r\nimport DocumentChanger from \"./Main/DocumentChanger.js\"\r\n\r\nwindow.Base = Base;\r\nwindow.RemoteCommand = RemoteCommand;\r\nwindow.CharId = CharId;\r\nwindow.Char = Char;\r\nwindow.Document = Document;\r\nwindow.Algorithm = Algorithm;\r\nwindow.DocumentChanger = DocumentChanger;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","window.MIN_BASE_EL = 0\r\n//const MAX_BASE_EL = Math.pow(2, 53) - 1\r\nwindow.MAX_BASE_EL = 1000\r\nwindow.MIN_OFFSET = MIN_BASE_EL + 1\r\nwindow.MAX_OFFSET = MAX_BASE_EL\r\nwindow.FIRST_ASSIGNED_OFFSET = Math.floor(MAX_OFFSET/2)\r\n\r\n// Char ID is represented by array of numbers, each of them in range [MIN_BASE_EL;MAX_BASE_EL]\r\n// Last element of char ID is called offset, others are called base\r\n// MIN_BASE_EL cannot be used as offset\r\n// When new base is generated, first char assigned to this base get offset FIRST_ASSIGNED_OFFSET, this value decide how much chars we can append and prepend to first char\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Const.js\n **/","export default class RemoteCommand{\r\n    constructor(){}\r\n\r\n    makeAddCommand(str, id, sessionId){\r\n        this.type = \"add\"\r\n        this.str = str\r\n        this.id = id\r\n        this.sessionId = sessionId\r\n    }\r\n\r\n    makeDelCommand(ids, sessionId){\r\n        this.type = \"del\"\r\n        this.ids = ids\r\n        this.sessionId = sessionId\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/RemoteCommand.js\n **/","export default class Base {\r\n    constructor(main, sessionId, clock) {\r\n        this.main = main\r\n        this.sessionId = sessionId\r\n        this.clock = clock\r\n        this.minUsedOffset = MAX_OFFSET + 1\r\n        this.maxUsedOffset = MIN_OFFSET - 1\r\n    }\r\n\r\n    get fullBase() {\r\n        return this.main.concat([this.sessionId], [this.clock])\r\n    }\r\n\r\n    get copy(){\r\n        return new Base(this.main.slice(), this.sessionId, this.clock) \r\n    }\r\n\r\n    isEqual(otherBase) {\r\n        if (this.sessionId !== otherBase.sessionId || this.clock !== otherBase.clock || this.main.length !== otherBase.main.length)\r\n            return false\r\n        for (let i = 0; i < this.main.length; ++i)\r\n            if (this.main[i] != otherBase.main[i])\r\n                return false\r\n\r\n        return true\r\n    }\r\n\r\n    isPrefix(charId){\r\n        let thisId = this.fullBase\r\n        let otherId = charId.fullId\r\n        if(thisId.length > otherId.length)\r\n            return false\r\n        for(let i=0; i<thisId.length; ++i)\r\n            if(thisId[i] != otherId[i])\r\n                return false\r\n        return true;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Base.js\n **/","export default class CharId {\r\n    constructor(base, offset) {\r\n        this.base = base\r\n        this.offset = offset\r\n        if (this.offset > base.maxUsedOffset)\r\n            base.maxUsedOffset = this.offset\r\n        if (this.offset < base.minUsedOffset)\r\n            base.minUsedOffset = offset\r\n    }\r\n\r\n    get fullId() {\r\n        return this.base.fullBase.concat(this.offset)\r\n    }\r\n\r\n    get copy(){\r\n        return new CharId(this.base.copy, this.offset)\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.base.isEqual(otherChar.base)\r\n            && this.offset === otherChar.offset\r\n    }\r\n\r\n    isBigger(otherCharId) {\r\n        let thisId = this.fullId, otherId = otherCharId.fullId\r\n        for (let i = 0; i < Math.min(thisId.length, otherId.length); ++i)\r\n            if (thisId[i] !== otherId[i])\r\n                return thisId[i] > otherId[i]\r\n        return thisId.length > otherId.length\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/CharId.js\n **/","export default class Char {\r\n    constructor(value, id) {\r\n        this.value = value\r\n        this.id = id\r\n    }\r\n\r\n    isEqual(otherChar) {\r\n        return this.value === otherChar.value\r\n            && this.id.isEqual(otherChar.id)\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Char.js\n **/","import Base from './Base';\r\nimport CharId from './CharId';\r\nimport Char from './Char';\r\n\r\n// At the beginning document contains two chars: DOC_BEG and DOC_END, they're not actual\r\n// text chars and are only used to represent start and end of the document\r\n\r\nvar DOC_BEG = new Char(null, new CharId(new Base([MIN_BASE_EL - 1], MIN_BASE_EL - 1, MIN_BASE_EL - 1), MIN_OFFSET - 1))\r\nvar DOC_END = new Char(null, new CharId(new Base([MAX_BASE_EL + 1], MAX_BASE_EL + 1, MAX_BASE_EL + 1), MAX_OFFSET + 1))\r\n\r\nexport default class Document {\r\n    constructor() {\r\n        this.chars = [DOC_BEG, DOC_END]\r\n        this.bases = []\r\n    }\r\n\r\n    insertStrAppended(str, pos) {\r\n        let charWeAppendTo = this.chars[pos - 1];\r\n        let base = charWeAppendTo.id.base\r\n        let firstOffset = charWeAppendTo.id.offset + 1\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStrPrepended(str, pos) {\r\n        let charWePrependTo = this.chars[pos];\r\n        let base = charWePrependTo.id.base\r\n        let firstOffset = charWePrependTo.id.offset - str.length\r\n        this.insertStringWithExistingBase(str, pos, base, firstOffset)\r\n    }\r\n\r\n    insertStringWithExistingBase(str, pos, base, firstOffset = FIRST_ASSIGNED_OFFSET) { //optimize\r\n        this.insertStrAtPos(str, pos, base, firstOffset)\r\n        //this.sortDocumentPart(1, this.chars.length - 1) //VERIFY CHANGE\r\n        this.sortDocumentPart(pos, this.chars.length - 1)\r\n    }\r\n\r\n    insertStringWithNewBase(str, pos, base) {\r\n        this.addBase(base)\r\n        this.insertStringWithExistingBase(str, pos, base)\r\n    }\r\n\r\n    insertStrAtPos(str, pos, base, firstCharOffset) {\r\n        let offset = firstCharOffset\r\n        for (let char of str) {\r\n            let newId = new CharId(base, offset)\r\n            let newChar = new Char(char, newId)\r\n            this.insertCharAtPos(newChar, pos)\r\n            ++pos\r\n            ++offset\r\n        }\r\n    }\r\n\r\n    addCharsAndGetChanges(chars) {\r\n        let changes = []\r\n        if (chars.length == 0)\r\n            return changes\r\n        let pos0 = this.getPosOfFirstCharWithBiggerId(chars[0].id)\r\n        let prevUsedPos = null\r\n        let changeStr = \"\"\r\n\r\n        for (let i = chars.length - 1; i >= 0; --i) {\r\n            let pos = this.getPosOfFirstCharWithBiggerIdStartingFrom(chars[i].id, pos0)\r\n            if (prevUsedPos === pos || changeStr === \"\") {\r\n                changeStr = chars[i].value + changeStr\r\n            } else {\r\n                let change = { type: \"add\", string: changeStr, position: this.getCoordPos(prevUsedPos) }\r\n                changes.push(change)\r\n                changeStr = chars[i].value\r\n            }\r\n            if (i == 0 && changeStr !== \"\")\r\n                changes.push({ type: \"add\", string: changeStr, position: this.getCoordPos(pos) })\r\n            this.insertCharAtPos(chars[i], pos)\r\n            prevUsedPos = pos\r\n        }\r\n\r\n        return changes\r\n    }\r\n\r\n    getCoordPos(pos) {\r\n        let line = 0\r\n        let column = 0\r\n        for (let i = pos - 1; this.chars[i].value != '\\n' && i > 0; --i){\r\n            column++\r\n        }\r\n        for (let i = 1; i < pos; ++i)\r\n            if (this.chars[i].value == \"\\n\")\r\n                line++\r\n        return { line: line, column: column }\r\n    }\r\n\r\n    sortDocumentPart(sortBeg, sortEnd) {\r\n        for (var pos = sortBeg + 1; pos <= sortEnd; ++pos) {\r\n            var temp = this.chars[pos];\r\n            var prevPos = pos - 1;\r\n            for (; prevPos >= 1 && this.chars[prevPos].id.isBigger(temp.id); --prevPos)\r\n                this.chars[prevPos + 1] = this.chars[prevPos];\r\n            this.chars[prevPos + 1] = temp;\r\n        }\r\n    }\r\n\r\n    addBase(base) {\r\n        this.bases.push(base)\r\n    }\r\n\r\n    delChars(fromPos, toPos) {\r\n        for (let pos = toPos; pos >= fromPos; --pos)\r\n            this.delChar(pos)\r\n    }\r\n\r\n    delChar(pos) {\r\n        this.chars.splice(pos, 1)\r\n    }\r\n\r\n    getPosOfCharWithId(id) {\r\n        for (let pos = 0; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfCharWithIdStartingFrom(id, startPos){\r\n        for (let pos = startPos; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isEqual(id))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerId(charId) {\r\n        for (let pos = 1; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getPosOfFirstCharWithBiggerIdStartingFrom(charId, startPos) {\r\n        for (let pos = startPos; pos < this.chars.length; ++pos)\r\n            if (this.chars[pos].id.isBigger(charId))\r\n                return pos\r\n        return null\r\n    }\r\n\r\n    getCharAtPos(pos) {\r\n        return this.chars[pos]\r\n    }\r\n\r\n    getIdOfCharAtPos(pos) {\r\n        return this.chars[pos].id\r\n    }\r\n\r\n    getCharIds(fromPos, toPos) {\r\n        let ids = []\r\n        for (let i = fromPos; i <= toPos; ++i)\r\n            ids.push(this.chars[i].id)\r\n        return ids;\r\n    }\r\n    getSameBase(base) {\r\n        for (let b of this.bases)\r\n            if (base.isEqual(b))\r\n                return b\r\n        return null\r\n    }\r\n\r\n    insertCharAtPos(char, pos) {\r\n        this.chars.splice(pos, 0, char)\r\n    }\r\n\r\n    isEmpty() {\r\n        return this.chars.length == 2\r\n    }\r\n\r\n    get text() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i)\r\n            text += this.chars[i].value\r\n        return text\r\n    }\r\n\r\n    get textTest() {\r\n        let text = \"\"\r\n        for (let i = 0; i < this.chars.length; ++i) {\r\n            text += (i == 0 || i == this.chars.length - 1 ? \"\" : this.chars[i].value)\r\n            if (i + 1 < this.chars.length && !(this.chars[i].id.base.isEqual(this.chars[i + 1].id.base)))\r\n                text += \"|\"\r\n        }\r\n        return text\r\n    }\r\n\r\n    getAsLines() {\r\n        let lines = []\r\n        let line = []\r\n        for (let i = 1; i < this.chars.length - 1; ++i) {\r\n            line.push(this.chars[i])\r\n            if (this.chars[i].value == '\\n' || i == this.chars.length - 2)\r\n                lines.push(line)\r\n        }\r\n        return lines\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/LogootDoc/Document.js\n **/","import Base from './LogootDoc/Base';\r\nimport CharId from './LogootDoc/CharId';\r\nimport Char from './LogootDoc/Char';\r\nimport Document from './LogootDoc/Document';\r\nimport RemoteCommand from './RemoteCommand';\r\n\r\nexport default class Algorithm {\r\n    constructor(doc, sessionId) {\r\n        this.doc = doc\r\n        this.sessionId = sessionId\r\n        this.clock = 0\r\n        this.idsOfCharsToDeleteLater = []\r\n    }\r\n\r\n    insert(str, pos){\r\n        this.insertIntoDocument(str, pos)\r\n        return this.createRemoteAddCommand(str, pos)\r\n    }\r\n\r\n    add(str, strId){\r\n        let chars = this.createCharsFromStr(str, strId)\r\n        for(let i = chars.length-1; i>=0; --i){\r\n            for(let j=this.idsOfCharsToDeleteLater.length-1; j>=0; --j){\r\n                if(chars[i].id.isEqual(this.idsOfCharsToDeleteLater[j])){\r\n                    chars.splice(i,1)\r\n                    this.idsOfCharsToDeleteLater.splice(j,1)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        let changes = this.doc.addCharsAndGetChanges(chars)\r\n        return changes;\r\n    }\r\n\r\n    remove(fromPos, toPos){\r\n        let delIds = this.doc.getCharIds(fromPos, toPos)\r\n        let delIdsCopy = delIds.map(function(id){return id.copy})\r\n        this.doc.delChars(fromPos, toPos)\r\n        return this.createRemoteDelCommand(delIdsCopy)\r\n    }\r\n\r\n    del(ids){\r\n        let pos0 = 1\r\n        let delPos = []\r\n        \r\n        for(let id of ids){\r\n            let pos = this.doc.getPosOfCharWithIdStartingFrom(id, pos0)\r\n            if(pos != null){\r\n                delPos.push(pos)\r\n                pos0 = pos\r\n            }\r\n            else\r\n                this.idsOfCharsToDeleteLater.push(id)\r\n        }\r\n\r\n        let changes = []\r\n        let prevUsedPos = null\r\n        let delPosRange = {start: null, end:null}\r\n        for(let i=delPos.length-1; i>=0; --i){\r\n            let pos = delPos[i]\r\n            if(prevUsedPos === pos + 1 || delPosRange.start == null)\r\n                delPosRange = this.extendRange(delPosRange, pos)\r\n            else{\r\n                let change = {type: \"del\", from: this.doc.getCoordPos(delPosRange.start), to: this.doc.getCoordPos(delPosRange.end)}\r\n                changes.push(change)\r\n                delPosRange = {start: pos, end: pos}\r\n            }\r\n            if(i==0 && delPosRange.start != null){\r\n                let change = {type: \"del\", from: this.doc.getCoordPos(delPosRange.start), to: this.doc.getCoordPos(delPosRange.end)}\r\n                changes.push(change)\r\n            }\r\n            prevUsedPos = pos;\r\n        }\r\n\r\n        for(let pos of delPos){\r\n                this.doc.delChar(pos)\r\n        }        \r\n        \r\n        return changes\r\n    }\r\n\r\n    extendRange(range, pos){\r\n        return range.start == null ? {start: pos, end: pos} : {start: pos, end: range.end} \r\n    }\r\n\r\n    Olddel(ids){ //optimize eg. if consecutive ids then obtain range (pos, pos+length-1)\r\n        for(let id of ids){\r\n            let pos = this.doc.getPosOfCharWithId(id)\r\n            if(pos != null)\r\n                this.doc.delChar(pos)\r\n            else\r\n                this.idsOfCharsToDeleteLater.push(id)\r\n        }\r\n    }\r\n\r\n    createRemoteDelCommand(delIds){\r\n        let remoteDelCommand = new RemoteCommand();\r\n        remoteDelCommand.makeDelCommand(delIds, this.session);\r\n        return remoteDelCommand\r\n    }\r\n\r\n    createCharsFromStr(str, strId){\r\n        let base = this.doc.getSameBase(strId.base)\r\n        if(base == null)\r\n            base = strId.base\r\n        \r\n        let chars = []\r\n        let offset = strId.offset\r\n        for(let char of str){\r\n            chars.push(new Char(char, new CharId(base, offset)))\r\n            ++offset\r\n        }\r\n        return chars;\r\n    }\r\n\r\n    insertIntoDocument(str, pos){\r\n        if(this.canInsertAppended(str, pos))\r\n            this.doc.insertStrAppended(str, pos)\r\n        else if(this.canInsertPrepended(str, pos))\r\n            this.doc.insertStrPrepended(str, pos)\r\n        else\r\n            this.doc.insertStringWithNewBase(str, pos, this.generateBaseAtPos(pos))\r\n    }\r\n\r\n    canInsertAppended(str, pos){\r\n        let charWeAppendTo = this.doc.getCharAtPos(pos - 1)\r\n        return this.isSameSession(charWeAppendTo)\r\n            && this.isHighestOffsetInBase(charWeAppendTo)\r\n            && this.isSpaceInBaseAfter(charWeAppendTo, str.length)\r\n            && this.isNotGoingToOverlapAfterApp(str, pos)\r\n    }\r\n\r\n    isNotGoingToOverlapAfterApp(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let lastIdOfAppStr = prevCharId.copy\r\n        lastIdOfAppStr.offset += str.length\r\n        return !lastIdOfAppStr.isBigger(nextCharId)\r\n    }\r\n\r\n    canInsertPrepended(str, pos){\r\n        let charWePrependTo = this.doc.getCharAtPos(pos)\r\n        return this.isSameSession(charWePrependTo)\r\n            && this.isLowestOffsetInBase(charWePrependTo)\r\n            && this.isSpaceInBaseBefore(charWePrependTo, str.length)\r\n            && this.isNotGoingToOverlapAfterPrep(str, pos)\r\n    }\r\n    \r\n    isNotGoingToOverlapAfterPrep(str, pos){\r\n        let prevCharId = this.doc.getIdOfCharAtPos(pos-1)\r\n        let nextCharId = this.doc.getIdOfCharAtPos(pos)\r\n        let firstIdOfPrepStr = nextCharId.copy\r\n        firstIdOfPrepStr.offset -= str.length\r\n        return !prevCharId.isBigger(firstIdOfPrepStr)\r\n    }\r\n\r\n    isSameSession(char){\r\n        return char.id.base.sessionId == this.sessionId\r\n    }\r\n\r\n    isHighestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.maxUsedOffset\r\n    }\r\n\r\n    isLowestOffsetInBase(char){\r\n        return char.id.offset == char.id.base.minUsedOffset\r\n    }\r\n\r\n    isSpaceInBaseAfter(char, spaceLength){\r\n        return char.id.offset + spaceLength < MAX_BASE_EL\r\n    }\r\n\r\n    isSpaceInBaseBefore(char, spaceLength){\r\n        return char.id.offset - spaceLength > MIN_BASE_EL\r\n    }\r\n\r\n    createRemoteAddCommand(str, pos){\r\n        let addId = this.doc.getCharAtPos(pos).id.copy\r\n        let remoteAddCommand = new RemoteCommand();\r\n        remoteAddCommand.makeAddCommand(str, addId, this.sessionId)\r\n        return remoteAddCommand\r\n    }\r\n\r\n    generateBaseAtPos(pos){\r\n        let idLow = this.doc.getIdOfCharAtPos(pos - 1).fullId\r\n        let idHigh = this.doc.getIdOfCharAtPos(pos).fullId\r\n        let low = idLow[0]\r\n        let high = idHigh[0]\r\n        let base = new Base([], this.sessionId, ++this.clock)\r\n\r\n        for (let i = 1; high - low < 2; ++i) {\r\n            base.main.push(low)\r\n            low = (i < idLow.length ? idLow[i] : MIN_BASE_EL)\r\n            high = (i < idHigh.length ? idHigh[i] : MAX_BASE_EL)\r\n        }\r\n        base.main.push(this.getRandomElementBetween(low + 1, high - 1))\r\n        return base\r\n    }\r\n\r\n    numberOfInsertableCharaters(idInsert, idNext, strLength){\r\n        if(idInsert.base.isPrefix(idNext))\r\n            return 0;\r\n        else\r\n            return strLength\r\n    }\r\n\r\n\r\n    getRandomElementBetween(low, high){\r\n        return Math.floor(Math.random() * (high - low + 1)) + low;\r\n    }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/Algorithm.js\n **/","import Base from './LogootDoc/Base';\r\nimport CharId from './LogootDoc/CharId';\r\nimport Char from './LogootDoc/Char';\r\nimport Document from './LogootDoc/Document';\r\nimport RemoteCommand from './RemoteCommand';\r\nimport Algorithm from './Algorithm';\r\n\r\nexport default class DocumentChanger{\r\n    constructor(algorithm, editor){\r\n        this.algorithm = algorithm\r\n        this.editor = editor\r\n        this.doc = algorithm.doc\r\n        this.sessionId = algorithm.sessionId\r\n        this.lines = this.doc.getAsLines()\r\n    }\r\n\r\n    performInsertAndGetAddCmd(str, line, column){\r\n        let pos = this.convertToAbsolutePos(line, column)\r\n        let addCmd = this.algorithm.insert(str, pos)\r\n        return addCmd\r\n    }\r\n\r\n    performRemoveAndGetDelCmd(startLine, startColumn, endLine, endColumn){\r\n        let fromPos = this.convertToAbsolutePos(startLine, startColumn)\r\n        let toPos = this.convertToAbsolutePos(endLine, endColumn)\r\n        let delCmd = this.algorithm.remove(fromPos, toPos)\r\n        return delCmd\r\n    }\r\n\r\n    addAndGetChanges(str, strId){\r\n        let changes = this.algorithm.add(str, strId)\r\n        //for(let c of changes)\r\n        //    console.log(c.type, c.string, c.position.line, c.position.column)\r\n        return changes\r\n    }\r\n\r\n    delAndGetChanges(ids){\r\n        let changes = this.algorithm.del(ids)\r\n        for(let c of changes)\r\n            console.log(c.type, c.from.line, c.from.column, c.to.line, c.to.column)\r\n        return changes\r\n    }\r\n\r\n    convertToAbsolutePos(line, column){\r\n        let pos = 0\r\n        let realDoc = this.editor.getSession().getDocument()\r\n\r\n        if(line > 0)\r\n            for(let i=0; i<line; ++i)\r\n                pos += realDoc.getLine(i).length\r\n\r\n        return pos + line + column + 1\r\n    }\r\n    \r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/Main/DocumentChanger.js\n **/"],"sourceRoot":""}